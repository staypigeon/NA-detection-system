开发目标：
1.实现对常见网络攻击和非常见网络攻击的检测
2.构建多层次的网络攻击检测系统，融合MCP规则匹配与AI检测，实现高准确率、低误报的实时攻击识别
3.提供可视化的交互界面与实时监控能力、历史分析功能
基本开发内容：
1. 攻击特征数据库（MCP Server）
功能：提供攻击特征的查询接口，包括已知攻击类型、特征描述、攻击模式等信息。
实现方式：使用数据库（如 PostgreSQL、MySQL）存储攻击特征数据，构建 RESTful API 或 GraphQL 接口，供 MCP Server 调用。
MCP 适配：开发 MCP Server，封装数据库查询接口，提供标准化的工具（Tools）供 AI Agent 调用。
2. AI Agent（MCP Client）
功能：在处理网络流量时，识别流量特征，判断是否为已知攻击类型；若无法判断，调用 MCP Server 查询攻击特征库，获取可能的攻击类型。
实现方式：在 AI Agent 中集成 MCP Client，使用 MCP 协议与 MCP Server 进行通信。
MCP 调用：根据流量特征，构建 MCP 请求，调用 MCP Server 提供的工具，获取攻击特征信息。
3. MCP Server 与 Client 通信流程
AI Agent 处理流量：分析网络流量，提取特征。
判断攻击类型：根据已知特征库判断是否为已知攻击类型。
调用 MCP Server：若无法判断，构建 MCP 请求，调用 MCP Server 查询攻击特征库。
返回结果：MCP Server 返回可能的攻击类型信息。
处理结果：AI Agent 根据返回的信息，进行相应的处理，如报警、记录等
4.AI检测功能（配合MCP）：
功能：当MCP Server返回为空结果，自动触发AI模型检测，根据攻击类型置信度，调整输出。（可能会有反馈闭环，把AI检测确认的新攻击特征回传到MCP Server，补充规则库）
实现方式：把训练好的模型（如LSTM+Attention、随机森林等）封装好，输入为流量特征向量。
MCP协同：AI Agent接收MCP Server的空相应之后，调用本地模型推理接口。
5.系统可视化：
功能：提供实时监控、历史分析与交互式管理界面。提供实时流量热力图、攻击类型分布情况，分级报警窗口等。
实现方式：前端框架PyQT5+QCharts，兼容windows和linux，数据流设计与交互设计，并提供扩展组件设计。
